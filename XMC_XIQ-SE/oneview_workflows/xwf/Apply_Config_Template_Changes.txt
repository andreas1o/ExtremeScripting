Apply Config Template

v33
	- First version shared
v36
	- Now supports any Family of devices.
	- Check is made for lookup in csvVarLookup
v38
	- Commands ending with "\ny" were not processed correctly if the template text file was in DOS format
	- Updated CLI functions, which can now handle error message false positives
v40
	- Added logic to process #if/#elseif/#else/#end Cisco velocity type statements
v42
	- Added logic to process #error fail|stop|continue
v48
	- Added input to gracefully skip execution if device not found in CSV file
v54
	- Added ability to change the accpeted CSV delimiter character; this can now be set in the
	  new const_CSV_DELIMITER workflow variable
	- Added MAC address as device lookup in CSV file
	- Site and CSV variable names can now include the "-" character
	- Now automatically enters config context on applicable family types
v56
	- On completion workflow now triggers device rediscovery and config reload via XIQ-SE API
v57
	- Function to read CSV file now tolerates empty lines in CSV file as well as spaces before/after
	  commas/values are now stripped
v61
	- Was not working on Product Families other than: VSP Series, Summit Series, ERS Series and ISW Series
	- Added basic commands to enable PrivExec, and Config mode for Family "200 Series"
	- Added basic commands to enable no paging for Family "ISW-Series"
v62
	- Updated to latest library functions; can now accept CLI commands with feed data, separated by "//"
v64
	- Added support for block statements in config template which allow for sending commands which would otherwise
	  temporarily compromise SSH/Telnet connectivity to the switch
	  #block start [n]  : Mark the beginning of a block of commands which will need to be sourced locally on the switch
	                      [n] = Optional number of seconds to sleep after block execution
	  #block execute [n]: Mark the end of block of commands which are to sourced locally on the switch
	                      If this directive is not seen, and the "#block start" was seen, all commands from the start of
	                      block section to the last command in the template file will be sourced locally on the switch
	                      [n] = Optional number of seconds to sleep after block execution
	- Added to variable const_EXPORT_EMC_VARS these additional emc_vars keys: deviceName, deviceSoftwareVer, deviceSysOid,
	 deviceType, family, ports
v65
	- Removed from variable const_EXPORT_EMC_VARS key "ports" as it is not available anyway
	- warpBuffer_execute() was failing to retrieve the TFTP file if username contained "@" character
v67
	- Added support for path variables %rootDir%, %sitePath% and %siteName% on CSV and config template file inputs
	- CSV parsing code is now forgiving with invalid CSV files where an entry has less records than declared in the top row
v71
	- Block statements no longer temporarily enable tftpd on VOSS
	- Improved debug messages
v81
	- CSV file can now be primed to fetch a "peer" device for the same variables. Row 0 Column 0 can now accept ":<var>"
	  suffix. Within the CSV file two entries can be fetched if they have the same value of var. The prime lookup entry
	  will have variables $<varX> and the peer entry same value can be fetched with $<peer:varX>
	- Velocity parsing error reporting improved
v82
	- Fix to CSV "peer" device lookup; if lookup device has no value for ":<var>" then no peer device is sought
	- If the CSV file is an empty file, now a meaningful error message is generated
v83
	- Added support for #eval embedded command
v88
	- Added device notes input field and added to variable const_EXPORT_EMC_VARS additional emc_vars key "date"
v89
	- #if/#elseif/#else/#end statements can now be nested
	- If tab characters are used for indentation in the template file, these will now be removed in the final config 
	- #eval command can now be used to set variable values using syntax: #eval varname=()
	- Variables set with #eval varname=() can be de-refenced anywhere in the template (including in #if, #elseif & #eval
	  evaluations) as $[varname] using square brackets
	- ASCII Config Template input can now also contain a CSV variable in the format $<var> or $(var); this can allow
	  a different config template file to be used as specified for the device in the CSV file
	- New #sleep <sec> statement to introduce a delay (does not work inside #block statements)
	- New #last statement allows not waiting for CLI prompt on last command in config template
v90
	- Fixes to $[varname] processing within #if/#elseif/#else/#end nested logic
	- Improved debugging messages
v91 - posted
	- #last statement can now also be placed in line right before #block execute

Todo:
        
